<?php

/**
 * @file
 * Wire functions for Etype Services to allow Editors to import and publish stories from other publications
 *
 */

/**
 * Implements hook_permission().
 */
function etype_wire_permission() {
  return [
    'access wire content' => [
      'title' => t('Access Wire Content'),
    ],
    'administer wire content' => [
      'title' => t('Administer Wire Content'),
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function etype_wire_menu() {

  $items = [];

  /* display wire content */
  $items['admin/content/wirecontent'] = [
    'title' => 'Wire Content',
    'description' => "Publish stories from other publications.",
    'page callback' => 'etype_wire_admin_content',
    'access callback' => 'user_access',
    'access arguments' => ['access wire content'],
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/wirecontent.admin.inc',
  ];

  /* to add wire content to site */
  $items['admin/wirecontent/%/%/add'] = [
    'title' => 'Add Wire Content',
    'description' => "Add content from other sites to this one.",
    'page callback' => 'etype_wire_node_add',
    'page arguments' => [2,3],
    'access arguments' => ['access wire content'],
    'type' => MENU_CALLBACK,
    'file' => 'includes/wirecontent.add.inc',
  ];

  /* to be able to run cron job from url */
  $items['admin/wirecontent/cron'] = [
    'title' => 'Wire Content',
    'description' => "Run Wire cron job.",
    'page callback' => 'etype_wire_node_export',
    'access arguments' => ['administer wire content'],
    'type' => MENU_CALLBACK,
    'file' => 'includes/wirecontent.cron.inc',
  ];

  $items['admin/config/etype/etype_wire/settings'] = [
    'title' => 'Wire Content',
    'description' => 'Wire content options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['etype_wire_site_admin'],
    'access arguments' => ['administer wire content'],
    'file' => 'includes/wirecontent.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  ];


  $items['admin/config/etype/etype_wire/settings/site'] = [
    'title' => 'Site',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  ];

  $items['admin/config/etype/etype_wire/settings/global'] = array(
    'title' => 'Global',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => ['etype_wire_global_admin'],
    'access arguments' => ['administer wire content'],
    'file' => 'includes/wirecontent.admin.inc',
  );


  return $items;
}

/**
 * @param $op
 * @param null $job
 * Runs every hour at 1 minute past
 * @return mixed
 */
function etype_wire_cronapi($op, $job = NULL) {

  $cron = variable_get('etype_wire_cron_setting', '1 * * * *');

  $items['etype_wire_cron'] = [
    'description' => 'Export Nodes to Wire Content',
    'rule' => $cron,
    'callback' => 'etype_wire_node_export',
    'arguments' => ['all'],
    'file' => 'includes/wirecontent.cron.inc',
  ];

  return $items;
}

/**
 * Implements hook_theme().
 */
function etype_wire_theme() {
  $theme = [
    'wire_admin_content' => [
      'variables' => ['nodes' => NULL],
      'file' => 'includes/wirecontent.admin.inc',
    ],
  ];
  return $theme;
}

/**
 * Implements hook_node_update().
 */
function etype_wire_node_update() {
  etype_wire_node_export();
}

/**
 * Connect to wire db
 * Connection settings need to be added to settings.php as
 * $databases['default']['wire']
 * @return \PDO
 */
function _etype_wire_connect() {

  global $databases;
  $password = $databases['default']['wire']['password'];
  $user = $databases['default']['wire']['username'];
  $host = $databases['default']['wire']['host'];
  $database = $databases['default']['wire']['database'];

  try {
    $dbHandle = new PDO("mysql:host=$host;dbname=$database;charset=utf8",
      $user, $password);
    $dbHandle->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    // always disable emulated prepared statement when using the MySQL driver
    $dbHandle->setAttribute(PDO::ATTR_EMULATE_PREPARES, FALSE);
  } catch (Exception $e) {
    echo "There was an error connecting to the database";
    exit;
  }

  return $dbHandle;
}

/**
 * @return bool
 */
function _etype_wire_check_connection() {
  global $databases;
  if (empty ($databases['default']['wire']['database'] || !isset
    ($databases['default']['wire']['database']))) {
    return false;
  } else {
    return true;
  }
}
